# Generated by Django 2.2.5 on 2019-12-05 14:34

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('construction', '0003_remove_construction_reference'),
        ('equipments', '0001_initial'),
        ('tools', '0001_initial'),
        ('reference_person', '0007_auto_20191023_1837'),
        ('course', '0002_auto_20191018_2305'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tests_material', '0003_delete_groutdicebreak'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrickType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Tipo Ladrillo', max_length=50)),
                ('name_element', models.CharField(blank=True, max_length=50, null=True)),
                ('brick_company', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('delate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Warping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upface_concave', models.FloatField()),
                ('upface_convex', models.FloatField()),
                ('downface_concave', models.FloatField()),
                ('downface_convex', models.FloatField()),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='VariationDimensions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upface_length', models.FloatField()),
                ('downface_length', models.FloatField()),
                ('average_length', models.FloatField(editable=False)),
                ('upface_width', models.FloatField()),
                ('downface_width', models.FloatField()),
                ('average_width', models.FloatField(editable=False)),
                ('high_backside', models.FloatField()),
                ('high_rightside', models.FloatField()),
                ('high_frontside', models.FloatField()),
                ('high_lefside', models.FloatField()),
                ('average_high', models.FloatField(editable=False)),
                ('n_d_length', models.FloatField()),
                ('n_d_width', models.FloatField()),
                ('n_d_high', models.FloatField()),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='Suction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomal_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('diff_weight', models.FloatField(editable=False)),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('face_area', models.FloatField(editable=False)),
                ('bar_200', models.FloatField(default=200.0)),
                ('face_wet_weight', models.FloatField()),
                ('face_wet_weight_correction', models.FloatField(editable=False)),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='DensityVoids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('high', models.FloatField()),
                ('volume_brick', models.FloatField(editable=False)),
                ('bar_500', models.FloatField(default=500.0)),
                ('sc', models.FloatField()),
                ('su', models.FloatField()),
                ('bar', models.FloatField(default=1.64)),
                ('volume_void', models.FloatField(editable=False)),
                ('volume_real', models.FloatField(editable=False)),
                ('void_percentage', models.FloatField(editable=False)),
                ('weight', models.FloatField()),
                ('density', models.FloatField(editable=False)),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='CompretionBrick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upface_length', models.FloatField()),
                ('upface_width', models.FloatField()),
                ('downface_length', models.FloatField()),
                ('downface_width', models.FloatField()),
                ('upface_area', models.FloatField(editable=False)),
                ('downface_area', models.FloatField(editable=False)),
                ('average_area', models.FloatField(editable=False)),
                ('load', models.FloatField()),
                ('compression_resistance', models.FloatField(editable=False)),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='AbsSatuCoeff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dry_weight', models.FloatField()),
                ('wet_weight_cool_24', models.FloatField()),
                ('wet_weight_hot_24', models.FloatField()),
                ('wet_weight_hot_5', models.FloatField()),
                ('abs_brick', models.FloatField(editable=False)),
                ('abs_max_brick', models.FloatField(editable=False)),
                ('coeff_sat', models.FloatField(editable=False)),
                ('brick_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_material.BrickType')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
    ]
