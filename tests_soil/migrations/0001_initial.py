# Generated by Django 2.2.5 on 2020-03-09 03:26

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('construction', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course', '0001_initial'),
        ('reference_person', '0001_initial'),
        ('equipments', '0001_initial'),
        ('tools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Limit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Límite Líquido Pastico', max_length=50)),
                ('pit', models.CharField(blank=True, max_length=50, null=True)),
                ('layer', models.CharField(choices=[('UNO', 'Estrato 1'), ('DOS', 'Estrato 2'), ('TRES', 'Estrato 3'), ('CUATRO', 'Estrato 4')], max_length=6)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('extraction_data', models.DateField()),
                ('done_data', models.DateField(default=datetime.datetime.now)),
                ('duration', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MoistureContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Contenido Humedad', max_length=50)),
                ('material', models.CharField(max_length=50)),
                ('quarry', models.CharField(max_length=50)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProctorM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Proctor Modificado', max_length=50)),
                ('material', models.CharField(max_length=50)),
                ('quarry', models.CharField(max_length=50)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpecificGravity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Gravedad Especifica', max_length=50)),
                ('material', models.CharField(max_length=50)),
                ('quarry', models.CharField(max_length=50)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Saturation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frac_extrad_weight', models.FloatField()),
                ('frac_gruesa_weight', models.FloatField()),
                ('frac_fina_weight', models.FloatField()),
                ('p_sp_frac_extrad', models.FloatField()),
                ('p_sp_frac_gruesa', models.FloatField()),
                ('g_sp_frac_fina', models.FloatField()),
                ('g_frac_fina_gruesa', models.FloatField(editable=False)),
                ('g_sp_global', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('proctor_m', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.ProctorM')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='SandCone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Sand Cone', max_length=50)),
                ('sampling_name', models.CharField(max_length=50)),
                ('progressive_sector', models.CharField(max_length=50)),
                ('section_level', models.CharField(max_length=50)),
                ('element_side', models.CharField(max_length=50)),
                ('layer', models.CharField(max_length=50)),
                ('weight_dry_max', models.FloatField()),
                ('opt_moisture', models.FloatField()),
                ('moisture', models.BooleanField(default=False)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Platic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl', models.IntegerField()),
                ('bowl_weight', models.FloatField()),
                ('wet_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('water_weight', models.FloatField(editable=False)),
                ('material_weight', models.FloatField(editable=False)),
                ('moisture', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.Limit')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='MoistureMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(choices=[('SUELO', 'Suelos'), ('ARENA', 'Arenas'), ('GRAVA', 'Gravas'), ('FINO', 'Finos')], max_length=6)),
                ('bowl_weight', models.FloatField()),
                ('wet_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('water_weight', models.FloatField(editable=False)),
                ('material_weight', models.FloatField(editable=False)),
                ('moisture', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('moisture_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.MoistureContent')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='Liquid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl', models.IntegerField()),
                ('hit', models.IntegerField()),
                ('bowl_weight', models.FloatField()),
                ('wet_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('water_weight', models.FloatField(editable=False)),
                ('material_weight', models.FloatField(editable=False)),
                ('moisture', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.Limit')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='HumidDensity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl_weight_sand', models.IntegerField()),
                ('bowl_weight_remaining_sand', models.IntegerField()),
                ('weight_sand', models.IntegerField(editable=False)),
                ('weight_sand_cone_plate', models.IntegerField()),
                ('weight_sand_excavation', models.IntegerField(editable=False)),
                ('sand_density', models.FloatField()),
                ('volume_material_extracted', models.FloatField(editable=False)),
                ('sample_weight_container', models.IntegerField()),
                ('container_weight', models.IntegerField(default=0)),
                ('wet_sample_weight', models.IntegerField(editable=False)),
                ('density_wet_sample', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('sand_cone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SandCone')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='GranulometricGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Granulometria Tamizado Gloval', max_length=50)),
                ('quarry', models.CharField(max_length=50)),
                ('layer', models.CharField(choices=[('UNO', 'Estrato 1'), ('DOS', 'Estrato 2'), ('TRES', 'Estrato 3'), ('CUATRO', 'Estrato 4')], max_length=6)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('hygr_humid', models.FloatField(blank=True, null=True)),
                ('organic', models.BooleanField(default=False)),
                ('liquid_limit', models.FloatField()),
                ('plastic_limit', models.FloatField()),
                ('plastic_index', models.FloatField(editable=False)),
                ('max_size', models.CharField(choices=[('4"', '4 inch'), ('3"', '3 inch'), ('2 1/2"', '2 1/2 inch'), ('2"', '2 inch'), ('1 1/2"', '1 1/2 inch'), ('1"', '1 inch'), ('3/4"', '3/4 inch'), ('1/2"', '1/2 inch'), ('3/8"', '3/8 inch')], default='2"', max_length=7)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalMesh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tamiz_4', models.FloatField(blank=True, null=True)),
                ('tamiz_3', models.FloatField(blank=True, null=True)),
                ('tamiz_2_1o2', models.FloatField(blank=True, null=True)),
                ('tamiz_2', models.FloatField(blank=True, null=True)),
                ('tamiz_1_1o2', models.FloatField(blank=True, null=True)),
                ('tamiz_1', models.FloatField(blank=True, null=True)),
                ('tamiz_3o4', models.FloatField(blank=True, null=True)),
                ('tamiz_1o2', models.FloatField(blank=True, null=True)),
                ('tamiz_3o8', models.FloatField(blank=True, null=True)),
                ('tamiz_N_4', models.FloatField(blank=True, null=True)),
                ('tamiz_N_8', models.FloatField(blank=True, null=True)),
                ('tamiz_N_10', models.FloatField(blank=True, null=True)),
                ('tamiz_N_16', models.FloatField(blank=True, null=True)),
                ('tamiz_N_20', models.FloatField(blank=True, null=True)),
                ('tamiz_N_30', models.FloatField(blank=True, null=True)),
                ('tamiz_N_40', models.FloatField(blank=True, null=True)),
                ('tamiz_N_50', models.FloatField(blank=True, null=True)),
                ('tamiz_N_60', models.FloatField(blank=True, null=True)),
                ('tamiz_N_80', models.FloatField(blank=True, null=True)),
                ('tamiz_N_100', models.FloatField(blank=True, null=True)),
                ('tamiz_N_140', models.FloatField(blank=True, null=True)),
                ('tamiz_N_200', models.FloatField(blank=True, null=True)),
                ('tamiz_fondo', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('granulometric_global', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.GranulometricGlobal')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='FractionRetained',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_retained', models.FloatField()),
                ('temperature_23', models.FloatField(default=22.0)),
                ('saturated_sample', models.FloatField()),
                ('w_basket_water', models.FloatField()),
                ('w_basket_water_sample', models.FloatField()),
                ('w_bowl', models.FloatField()),
                ('w_bowl_sample', models.FloatField()),
                ('w_sample_dry', models.FloatField(editable=False)),
                ('w_sample_sat_water', models.FloatField(editable=False)),
                ('specific_grav_mass', models.FloatField(editable=False)),
                ('specific_grav_mass_sss', models.FloatField(editable=False)),
                ('apparent_spe_gravity', models.FloatField(editable=False)),
                ('coefficient_water', models.FloatField(default=0.99979)),
                ('specific_mass_weight', models.FloatField(editable=False)),
                ('specific_mass_weight_sss', models.FloatField(editable=False)),
                ('specific_mass_weight_app', models.FloatField(editable=False)),
                ('absorption', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('specific_gravity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SpecificGravity')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='FractionPass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_pass', models.FloatField()),
                ('temperature', models.FloatField(default=21.0)),
                ('water_density', models.FloatField(default=0.99799)),
                ('pycnometer_volume', models.FloatField()),
                ('pycnometer_mass', models.FloatField()),
                ('mass_pycnometer_water', models.FloatField(editable=False)),
                ('sample_mass', models.FloatField()),
                ('mass_pyc_w_sample', models.FloatField()),
                ('mass_bowl', models.FloatField()),
                ('mass_bowl_sample', models.FloatField()),
                ('mass_dry_sample', models.FloatField(editable=False)),
                ('gravity_specific', models.FloatField(editable=False)),
                ('coefficient_water', models.FloatField(default=0.99979)),
                ('gravity_specific_real', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('specific_gravity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SpecificGravity')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='FineMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Material Mas Fino', max_length=50)),
                ('pit', models.CharField(blank=True, max_length=50, null=True)),
                ('layer', models.CharField(choices=[('UNO', 'Estrato 1'), ('DOS', 'Estrato 2'), ('TRES', 'Estrato 3'), ('CUATRO', 'Estrato 4')], max_length=6)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('duration', models.IntegerField(editable=False)),
                ('bowl', models.IntegerField()),
                ('before_weight', models.FloatField()),
                ('bowl_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('after_weight', models.FloatField(editable=False)),
                ('pass_weight', models.FloatField(editable=False)),
                ('fine', models.FloatField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Equivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Valor Equivalente Arena Finos', max_length=50)),
                ('pit', models.CharField(blank=True, max_length=50, null=True)),
                ('layer', models.CharField(choices=[('UNO', 'Estrato 1'), ('DOS', 'Estrato 2'), ('TRES', 'Estrato 3'), ('CUATRO', 'Estrato 4')], max_length=6)),
                ('code', models.CharField(editable=False, max_length=255, unique=True)),
                ('sampling_date', models.DateField()),
                ('done_date', models.DateField(default=datetime.datetime.now)),
                ('dilate', models.IntegerField(editable=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='construction.Construction')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.Course')),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('reference_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference_person.ReferencePerson')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Equiv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_size', models.FloatField(default=4.75)),
                ('start_sat_time', models.TimeField(default=datetime.time(0, 0))),
                ('out_sat_time', models.TimeField(default=datetime.time(0, 0))),
                ('start_dec_time', models.TimeField(default=datetime.time(0, 0))),
                ('out_dec_time', models.TimeField(default=datetime.time(0, 0))),
                ('max_high_fine', models.FloatField()),
                ('max_high_sand', models.FloatField()),
                ('equiv_sand', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('equivalent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.Equivalent')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='DensityWetDry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layers', models.IntegerField(default=5)),
                ('hits', models.IntegerField()),
                ('material_weight_P', models.IntegerField()),
                ('bowl_weight_P', models.IntegerField(default=6380)),
                ('compacted_weight_P', models.IntegerField(editable=False)),
                ('bowl_volume_P', models.FloatField(default=2130.0)),
                ('wet_density', models.FloatField(editable=False)),
                ('bowl', models.IntegerField()),
                ('bowl_weight', models.FloatField()),
                ('wet_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('water_weight', models.FloatField(editable=False)),
                ('material_weight', models.FloatField(editable=False)),
                ('moisture', models.FloatField(editable=False)),
                ('dry_density', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('proctor_m', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.ProctorM')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='CorrectionSandCone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wet_fraction_weight', models.IntegerField()),
                ('p_e_ap_frac_extrad', models.FloatField()),
                ('per_abs_tails_extrad', models.FloatField()),
                ('weight_fraction_extrad', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('sand_cone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SandCone')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bowl_weight', models.FloatField()),
                ('wet_weight', models.FloatField()),
                ('dry_weight', models.FloatField()),
                ('water_weight', models.FloatField(editable=False)),
                ('material_weight', models.FloatField(editable=False)),
                ('moisture', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('proctor_m', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.ProctorM')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='ContentMoistureCarbure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wet_weight_percentage', models.FloatField()),
                ('dry_weight_percentage', models.IntegerField()),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('sand_cone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SandCone')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
        migrations.CreateModel(
            name='ContentMoisture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_fraction_pass', models.CharField(default='Pas. 3/4"', max_length=15)),
                ('bowl_weight', models.FloatField()),
                ('wet_sample_weight_bowl', models.FloatField()),
                ('dry_sample_weight_bowl', models.FloatField()),
                ('weight_water', models.FloatField(editable=False)),
                ('dry_sample_weight', models.FloatField(editable=False)),
                ('sample_moisture', models.FloatField(editable=False)),
                ('equipment', models.ManyToManyField(to='equipments.Equip')),
                ('sand_cone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests_soil.SandCone')),
                ('tool', models.ManyToManyField(to='tools.Tool')),
            ],
        ),
    ]
